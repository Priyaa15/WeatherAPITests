<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" total="10" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="19527" started-at="2019-03-28T00:53:42Z" finished-at="2019-03-28T00:54:01Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="19527" started-at="2019-03-28T00:53:42Z" finished-at="2019-03-28T00:54:01Z">
      <class name="com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="beforeMethod" is-config="true" duration-ms="237" started-at="2019-03-28T11:53:42Z" finished-at="2019-03-28T11:53:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon.GetDataByLatAndLon_HasLocationProperty() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="setUp" is-config="true" duration-ms="26" started-at="2019-03-28T11:53:42Z" finished-at="2019-03-28T11:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="GetDataByLatAndLon_HasLocationProperty()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="GetDataByLatAndLon_HasLocationProperty" duration-ms="5811" started-at="2019-03-28T11:53:42Z" finished-at="2019-03-28T11:53:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.qloyal.WeatherAPI_Tests.Assertions.verifyPropertyIsPresent(Assertions.java:94)
	at com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon.GetDataByLatAndLon_HasLocationProperty(AC1_GetDatabyLatAndLon.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDataByLatAndLon_HasLocationProperty -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="afterMethod" is-config="true" duration-ms="805" started-at="2019-03-28T11:53:48Z" finished-at="2019-03-28T11:53:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetDataByLatAndLon_HasLocationProperty status=FAILURE method=AC1_GetDatabyLatAndLon.GetDataByLatAndLon_HasLocationProperty()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-03-28T11:53:49Z" finished-at="2019-03-28T11:53:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon.StatucCode400_WithInvalid_LatAndLonQparams() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="setUp" is-config="true" duration-ms="2" started-at="2019-03-28T11:53:49Z" finished-at="2019-03-28T11:53:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="StatucCode400_WithInvalid_LatAndLonQparams()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="StatucCode400_WithInvalid_LatAndLonQparams" duration-ms="1466" started-at="2019-03-28T11:53:49Z" finished-at="2019-03-28T11:53:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatucCode400_WithInvalid_LatAndLonQparams -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="afterMethod" is-config="true" duration-ms="60" started-at="2019-03-28T11:53:50Z" finished-at="2019-03-28T11:53:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StatucCode400_WithInvalid_LatAndLonQparams status=SUCCESS method=AC1_GetDatabyLatAndLon.StatucCode400_WithInvalid_LatAndLonQparams()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="setUp" is-config="true" duration-ms="2" started-at="2019-03-28T11:53:50Z" finished-at="2019-03-28T11:53:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-03-28T11:53:50Z" finished-at="2019-03-28T11:53:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon.StatusCode200_GetCurrentWeatherDataByLatAndLonWithMultipleCities() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="StatusCode200_GetCurrentWeatherDataByLatAndLonWithMultipleCities()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="StatusCode200_GetCurrentWeatherDataByLatAndLonWithMultipleCities" duration-ms="1444" started-at="2019-03-28T11:53:50Z" finished-at="2019-03-28T11:53:52Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:238)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
	at com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon.StatusCode200_GetCurrentWeatherDataByLatAndLonWithMultipleCities(AC1_GetDatabyLatAndLon.java:172)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode200_GetCurrentWeatherDataByLatAndLonWithMultipleCities -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="afterMethod" is-config="true" duration-ms="61" started-at="2019-03-28T11:53:52Z" finished-at="2019-03-28T11:53:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StatusCode200_GetCurrentWeatherDataByLatAndLonWithMultipleCities status=FAILURE method=AC1_GetDatabyLatAndLon.StatusCode200_GetCurrentWeatherDataByLatAndLonWithMultipleCities()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-03-28T11:53:52Z" finished-at="2019-03-28T11:53:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon.StatusCode200_GetDataByLatAndLon() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="setUp" is-config="true" duration-ms="2" started-at="2019-03-28T11:53:52Z" finished-at="2019-03-28T11:53:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="StatusCode200_GetDataByLatAndLon()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="StatusCode200_GetDataByLatAndLon" duration-ms="1554" started-at="2019-03-28T11:53:52Z" finished-at="2019-03-28T11:53:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode200_GetDataByLatAndLon -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="afterMethod" is-config="true" duration-ms="107" started-at="2019-03-28T11:53:53Z" finished-at="2019-03-28T11:53:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StatusCode200_GetDataByLatAndLon status=SUCCESS method=AC1_GetDatabyLatAndLon.StatusCode200_GetDataByLatAndLon()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-03-28T11:53:53Z" finished-at="2019-03-28T11:53:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon.StatusCode400_GetWithNoLatAndLonQparams() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="setUp" is-config="true" duration-ms="5" started-at="2019-03-28T11:53:53Z" finished-at="2019-03-28T11:53:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="StatusCode400_GetWithNoLatAndLonQparams()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="StatusCode400_GetWithNoLatAndLonQparams" duration-ms="1466" started-at="2019-03-28T11:53:53Z" finished-at="2019-03-28T11:53:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode400_GetWithNoLatAndLonQparams -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="afterMethod" is-config="true" duration-ms="45" started-at="2019-03-28T11:53:55Z" finished-at="2019-03-28T11:53:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StatusCode400_GetWithNoLatAndLonQparams status=SUCCESS method=AC1_GetDatabyLatAndLon.StatusCode400_GetWithNoLatAndLonQparams()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-03-28T11:53:55Z" finished-at="2019-03-28T11:53:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon.StatusCode403_GetWithNoAPIKey() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="setUp" is-config="true" duration-ms="2" started-at="2019-03-28T11:53:55Z" finished-at="2019-03-28T11:53:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="StatusCode403_GetWithNoAPIKey()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="StatusCode403_GetWithNoAPIKey" duration-ms="1922" started-at="2019-03-28T11:53:55Z" finished-at="2019-03-28T11:53:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode403_GetWithNoAPIKey -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b]" name="afterMethod" is-config="true" duration-ms="78" started-at="2019-03-28T11:53:57Z" finished-at="2019-03-28T11:53:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StatusCode403_GetWithNoAPIKey status=SUCCESS method=AC1_GetDatabyLatAndLon.StatusCode403_GetWithNoAPIKey()[pri:0, instance:com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon@3c09711b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.qloyal.CurrentWeatherData.AC1_GetDatabyLatAndLon -->
      <class name="com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6]" name="setUp" is-config="true" duration-ms="5" started-at="2019-03-28T11:53:57Z" finished-at="2019-03-28T11:53:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-03-28T11:53:57Z" finished-at="2019-03-28T11:53:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode.StatusCode200_GetByPostcode() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="StatusCode200_GetByPostcode()[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6]" name="StatusCode200_GetByPostcode" duration-ms="5" started-at="2019-03-28T11:53:57Z" finished-at="2019-03-28T11:53:57Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode.StatusCode200_GetByPostcode(AC2_GetDataByPostCode.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode200_GetByPostcode -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6]" name="afterMethod" is-config="true" duration-ms="59" started-at="2019-03-28T11:53:57Z" finished-at="2019-03-28T11:53:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StatusCode200_GetByPostcode status=FAILURE method=AC2_GetDataByPostCode.StatusCode200_GetByPostcode()[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-03-28T11:53:57Z" finished-at="2019-03-28T11:53:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode.StatusCode400_GetWithInvalid_PostcalCodee() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1" started-at="2019-03-28T11:53:57Z" finished-at="2019-03-28T11:53:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="StatusCode400_GetWithInvalid_PostcalCodee()[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6]" name="StatusCode400_GetWithInvalid_PostcalCodee" duration-ms="1406" started-at="2019-03-28T11:53:57Z" finished-at="2019-03-28T11:53:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <204>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <204>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
	at com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode.StatusCode400_GetWithInvalid_PostcalCodee(AC2_GetDataByPostCode.java:151)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode400_GetWithInvalid_PostcalCodee -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6]" name="afterMethod" is-config="true" duration-ms="41" started-at="2019-03-28T11:53:58Z" finished-at="2019-03-28T11:53:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StatusCode400_GetWithInvalid_PostcalCodee status=FAILURE method=AC2_GetDataByPostCode.StatusCode400_GetWithInvalid_PostcalCodee()[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6]" name="setUp" is-config="true" duration-ms="2" started-at="2019-03-28T11:53:58Z" finished-at="2019-03-28T11:53:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-03-28T11:53:58Z" finished-at="2019-03-28T11:53:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode.StatusCode400_GetWithNoPostalCode() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="StatusCode400_GetWithNoPostalCode()[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6]" name="StatusCode400_GetWithNoPostalCode" duration-ms="1407" started-at="2019-03-28T11:53:58Z" finished-at="2019-03-28T11:54:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode400_GetWithNoPostalCode -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6]" name="afterMethod" is-config="true" duration-ms="43" started-at="2019-03-28T11:54:00Z" finished-at="2019-03-28T11:54:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StatusCode400_GetWithNoPostalCode status=SUCCESS method=AC2_GetDataByPostCode.StatusCode400_GetWithNoPostalCode()[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-03-28T11:54:00Z" finished-at="2019-03-28T11:54:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode.StatusCode403_GetWithNoAPIKey() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6]" name="setUp" is-config="true" duration-ms="3" started-at="2019-03-28T11:54:00Z" finished-at="2019-03-28T11:54:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="StatusCode403_GetWithNoAPIKey()[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6]" name="StatusCode403_GetWithNoAPIKey" duration-ms="1371" started-at="2019-03-28T11:54:00Z" finished-at="2019-03-28T11:54:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode403_GetWithNoAPIKey -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6]" name="afterMethod" is-config="true" duration-ms="41" started-at="2019-03-28T11:54:01Z" finished-at="2019-03-28T11:54:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StatusCode403_GetWithNoAPIKey status=SUCCESS method=AC2_GetDataByPostCode.StatusCode403_GetWithNoAPIKey()[pri:0, instance:com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.qloyal.CurrentWeatherData.AC2_GetDataByPostCode -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
